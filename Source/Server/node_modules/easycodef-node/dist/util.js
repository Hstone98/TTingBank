"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodeToFileString = exports.encryptRSA = void 0;
var crypto_1 = __importDefault(require("crypto"));
var fs_1 = __importDefault(require("fs"));
var constants_1 = __importDefault(require("constants"));
/**
 * RSA 암호화
 * @param plainText
 * @returns {*}
 */
function encryptRSA(publicKey, plainText) {
    var bufferToEncrypt = Buffer.from(plainText);
    return crypto_1.default
        .publicEncrypt({
        key: '-----BEGIN PUBLIC KEY-----\n' +
            publicKey +
            '\n-----END PUBLIC KEY-----',
        padding: constants_1.default.RSA_PKCS1_PADDING,
    }, bufferToEncrypt)
        .toString('base64');
}
exports.encryptRSA = encryptRSA;
/**
 *  byte배열로 추출한 파일 정보를 BASE64 문자열로 인코딩
 * @param filePath
 * @returns {string}
 */
function encodeToFileString(filePath) {
    return new Promise(function (resolve, rejects) {
        fs_1.default.readFile(filePath, function (err, buffer) {
            if (err) {
                rejects(err);
                return;
            }
            resolve(buffer.toString('base64'));
        });
    });
}
exports.encodeToFileString = encodeToFileString;
exports.default = {
    encryptRSA: encryptRSA,
    encodeToFileString: encodeToFileString,
};
