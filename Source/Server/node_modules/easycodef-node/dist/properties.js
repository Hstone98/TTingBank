"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Properties = void 0;
var _a = require('./constant'), SERVICE_TYPE_API = _a.SERVICE_TYPE_API, SERVICE_TYPE_DEMO = _a.SERVICE_TYPE_DEMO, API_DOMAIN = _a.API_DOMAIN, SANDBOX_DOMAIN = _a.SANDBOX_DOMAIN, DEMO_DOMAIN = _a.DEMO_DOMAIN, SANDBOX_CLIENT_ID = _a.SANDBOX_CLIENT_ID, SANDBOX_CLIENT_SECRET = _a.SANDBOX_CLIENT_SECRET;
var Properties = /** @class */ (function () {
    function Properties() {
        this.sandboxClientID = SANDBOX_CLIENT_ID;
        this.sandboxClientSecret = SANDBOX_CLIENT_SECRET;
        this.clientID = '';
        this.clientSecret = '';
        this.demoClientID = '';
        this.demoClientSecret = '';
        this.publicKey = '';
    }
    /**
     * 정식서버 사용을 위한 클라이언트 정보 설정
     * @param clientID
     * @param clientSecret
     */
    Properties.prototype.setClientInfo = function (clientID, clientSecret) {
        this.clientID = clientID;
        this.clientSecret = clientSecret;
    };
    /**
     * 데모서버 사용을 위한 클라이언트 정보 설정
     * @param clientID
     * @param clientSecret
     */
    Properties.prototype.setDemoClientInfo = function (clientID, clientSecret) {
        this.demoClientID = clientID;
        this.demoClientSecret = clientSecret;
    };
    /**
     * 상품 요청 URL
     * @param productURLPath
     * @returns {string}
     */
    Properties.prototype.getProductRequestURL = function (serviceType, productURLPath) {
        switch (serviceType) {
            case SERVICE_TYPE_API:
                return API_DOMAIN + productURLPath;
            case SERVICE_TYPE_DEMO:
                return DEMO_DOMAIN + productURLPath;
            default:
                return SANDBOX_DOMAIN + productURLPath;
        }
    };
    /**
     * RSA암호화를 위한 퍼블릭키 설정
     * @param publicKey
     */
    Properties.prototype.setPublicKey = function (publicKey) {
        this.publicKey = publicKey;
    };
    Properties.prototype.getPublicKey = function () {
        return this.publicKey;
    };
    /**
     * 클라이언트 정보 조회
     * @param {ServiceType} serviceType
     */
    Properties.prototype.getClientInfo = function (serviceType) {
        switch (serviceType) {
            case SERVICE_TYPE_API:
                return { clientID: this.clientID, clientSecret: this.clientSecret };
            case SERVICE_TYPE_DEMO:
                return {
                    clientID: this.demoClientID,
                    clientSecret: this.demoClientSecret,
                };
            default:
                return {
                    clientID: this.sandboxClientID,
                    clientSecret: this.sandboxClientSecret,
                };
        }
    };
    return Properties;
}());
exports.Properties = Properties;
