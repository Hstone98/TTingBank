import { ServiceType } from './constant';
import { ClientInfo } from './properties';
/**
 * 코드에프의 쉬운 사용을 위한 유틸 라이브러리 클래스
 */
export declare class EasyCodef {
    private properties;
    private accessToken;
    constructor();
    /**
     * RSA 암호화를 위한 퍼블릭키 설정
     * @param key
     */
    setPublicKey(publickey: string): void;
    /**
     *  RSA암호화를 위한 퍼블릭키
     */
    getPublicKey(): string;
    /**
     * 정식서버 사용을 위한 클라이언트 정보 설정
     * @param realClientId
     * @param realClientSecret
     */
    setClientInfo(clientID: string, clientSecret: string): void;
    /**
     * 데모서버 사용을 위한 클라이언트 정보 설정
     * @param demoClientId
     * @param demoClientSecret
     */
    setClientInfoForDemo(clientID: string, clientSecret: string): void;
    /**
     * 서비스별 토큰 설정
     * @param serviceType
     * @param token
     */
    setAccessToken(serviceType: ServiceType, token: string): void;
    /**
     * 서비스별 토큰 가져오기
     * @param serviceType
     */
    getAccessToken(serviceType: ServiceType): string;
    /**
     * 클라이언트 정보 조회
     * @param {*} serviceType
     */
    getClientInfo(serviceType: ServiceType): ClientInfo;
    /**
     * 서비스 타입에 따른 클라이언트 정보 설정 확인
     * @returns {boolean}
     */
    private checkClientInfo;
    /**
     * 상품 요청 URL
     * @param serviceType
     * @param productURL
     * @returns {string}
     */
    getProductRequestURL(serviceType: ServiceType, productURL: string): string;
    /**
     * 상품 요청
     * @param productURL
     * @param serviceType
     * @param parameterMap
     */
    requestProduct(productURL: string, serviceType: ServiceType, param: any): Promise<string>;
    /**
     * 상품 2way 추가인증 요청
     * @param productURL
     * @param serviceType
     * @param param
     */
    requestCertification(productURL: string, serviceType: ServiceType, param: any): Promise<string>;
    /**
     * 서비스별 (정식/데모/샌드박스)토큰발급 요청
     * @param serviceType
     */
    requestToken(serviceType: ServiceType): Promise<string>;
    /**
     * 서비스별 계정 목록 조회
     * @param serviceType
     * @param paramMap
     */
    getConnectedIdList(serviceType: ServiceType, param: any): Promise<string>;
    /**
     * connectedId 발급을 위한 계정 등록
     * @param serviceType
     * @param paramMap
     */
    createAccount(serviceType: ServiceType, param: any): Promise<string>;
    /**
     * connectedId로 등록된 계정 목록 조회
     * @param serviceType
     * @param paramMap
     */
    getAccountList(serviceType: ServiceType, param: any): Promise<string>;
    /**
     *  계정 정보 추가
     * @param serviceType
     * @param param
     */
    addAccount(serviceType: ServiceType, param: any): Promise<string>;
    /**
     *  계정 정보 삭제
     * @param serviceType
     * @param param
     */
    deleteAccount(serviceType: ServiceType, param: any): Promise<string>;
    /**
     * Comment  : 계정 정보 수정
     * @param serviceType
     * @param param
     */
    updateAccount(serviceType: ServiceType, param: any): Promise<string>;
}
